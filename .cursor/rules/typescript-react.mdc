---
globs: *.ts,*.tsx
description: TypeScript and React coding standards for the farming application
---

# TypeScript & React Standards

## Component Guidelines
- Use functional components with hooks
- Always use TypeScript - no `any` types allowed
- Prefer interfaces over types for object shapes
- Export components as named exports, not default exports

## Import Order
1. React and React-related imports
2. Third-party library imports  
3. shadcn/ui component imports from `@/components/ui/`
4. Internal component imports
5. Type imports from `@/types/farming`
6. Utility imports from `@/lib/utils`
7. Relative imports

Example:
```typescript
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { FieldCard } from '@/components/dashboard/FieldCard';
import { FieldData, TaskStatus } from '@/types/farming';
import { formatDate, cn } from '@/lib/utils';
import './Component.css';
```

## Naming Conventions
- **Components**: PascalCase (`FieldCard`, `WeatherWidget`)
- **Functions**: camelCase (`calculateYield`, `formatFieldData`)
- **Constants**: UPPER_SNAKE_CASE (`API_ENDPOINTS`, `FIELD_TYPES`)
- **Types/Interfaces**: PascalCase with descriptive names (`FieldData`, `TaskStatus`)

## Component Template
```typescript
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { ComponentNameProps } from '@/types/farming';

export const ComponentName: React.FC<ComponentNameProps> = ({ 
  prop1, 
  prop2 
}) => {
  return (
    <Card>
      <CardHeader>
        <CardTitle>Component Title</CardTitle>
      </CardHeader>
      <CardContent>
        {/* Component content */}
      </CardContent>
    </Card>
  );
};
```

## Agricultural Data Types
- Use proper TypeScript types for farming data from [farming.ts](mdc:src/types/farming.ts)
- Field coordinates should use latitude/longitude numbers
- Dates should be ISO strings or Date objects
- Measurements should include units (hectares, kg/ha, etc.)
- Status fields should use union types for consistency